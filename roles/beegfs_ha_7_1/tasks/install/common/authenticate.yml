- name: Set pcs cluster password.
  user:
    name: "{{ beegfs_ha_cluster_username }}"
    password: "{{ beegfs_ha_cluster_password | password_hash('sha512', beegfs_ha_cluster_password_sha512_salt) }}"
    create_home: false
  become: true

- name: Retrieve the pcsd tokens for cluster node authentication validation.
  fetch:
    src: "{{ beegfs_ha_pcsd_tokens }}"
    dest: "/tmp/~pcsd_tokens-{{ inventory_hostname }}"
    flat: true
    fail_on_missing: false
  register: fetched_pcsd_tokens
  changed_when: false
  failed_when: false
  become: true

- name: Determine pcs cluster node authentication statuses.
  set_fact:
    pcs_auth_tokens: "{{ (lookup('file', '/tmp/~pcsd_tokens-{{ inventory_hostname }}') | default({'tokens': {}}) | from_json)['tokens'] }}"
  become: true
  when: '"dest" in (fetched_pcsd_tokens.keys() | list)'

- name: Ensure all pcs cluster nodes have been authenticate.
  command:
    cmd: "{{ beegfs_ha_pcs_auth_command }} {{ groups[beegfs_ha_ansible_host_group] | join(' ') }} -u {{ beegfs_ha_cluster_username }} -p {{ beegfs_ha_cluster_password }}"
  register: pcs_node_authentication_update
  when: unauthenticated_nodes | length > 0 and inventory_hostname == preferred_management_node
  become: true
  vars:
    unauthenticated_nodes: |-
      {%- set unauthenticated_nodes = [] -%}
      {%- for host in groups[beegfs_ha_ansible_host_group] -%}
        {%- if pcs_auth_tokens is not defined or hostvars[host]["inventory_hostname"] not in (pcs_auth_tokens.keys() | list) -%}
          {%- if unauthenticated_nodes.append(host) -%}{%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      {{- unauthenticated_nodes -}}
