- name: Execute all tasks to install the BeeGFS client and mount BeeGFS.
  block:  # Wrapping all tasks in a block so we can set become: yes once.
  - name: When install the DKMS client update /etc/beegfs/beegfs-client-build.mk to add support for third party OFED drivers.
    ansible.builtin.template:
      src: beegfs-client-build.mk.j2
      dest: "/etc/beegfs/beegfs-client-build.mk"
      mode: 0644
    when: beegfs_client_dkms_install
    # register: beegfs_client_build_mk_result
    # TODO: Reinstall DKMS packages or otherwise force rebuilding/reloading the module if this changes.

  - name: Install and configure BeeGFS Client packages (All).
    block:
      - ansible.builtin.include_tasks: packages/redhat_packages.yml
        when: ansible_facts['os_family'] | lower == 'redhat'
      - ansible.builtin.include_tasks: packages/suse_packages.yml
        when: ansible_facts['os_family'] | lower == 'suse'
      - ansible.builtin.include_tasks: packages/debian_packages.yml
        when: ansible_facts['os_family'] | lower == 'debian'

      - name: Disable beegfs-helperd connection authentication.
        ansible.builtin.lineinfile:
          create: true
          path: /etc/beegfs/beegfs-helperd.conf
          line: "connDisableAuthentication = true"
          regexp: "^connDisableAuthentication.*=.*"
          state: present
        register: beegfs_helperd_conn_auth

      - name: Ensure beegfs-helperd is started/enabled.
        ansible.builtin.systemd:
          name: beegfs-helperd
          enabled: true
          state: "{{ 'restarted' if beegfs_helperd_conn_auth['changed'] else 'started' }}"

      - name: Install BeeGFS Client udev rule.
        ansible.builtin.template:
          src: beegfs-client-udev.rules.j2
          dest: "/etc/udev/rules.d/{{ beegfs_client_udev_rule_name }}"
          owner: root
          group: root
          mode: '0644'
        register: install_beegfs_client_udev
        when: beegfs_client_udev_rule_install

      - name: Reload udev rules.
        ansible.builtin.command: udevadm control --reload
        when: install_beegfs_client_udev['changed'] == True
        notify: Restart BeeGFS Client
    tags: beegfs_client_install

  - name: Complete non-DKMS BeeGFS Client Tasks
    block:
      - name: Remove the default beegfs-mount.conf entry
        ansible.builtin.lineinfile:
          path: /etc/beegfs/beegfs-mounts.conf
          line: "/mnt/beegfs /etc/beegfs/beegfs-client.conf"
          state: absent

      - name: Update /etc/beegfs/beegfs-client-autobuild.conf to include support for the Mellanox OFED drivers if requested.
        ansible.builtin.template:
          src: beegfs-client-autobuild.j2
          dest: "/etc/beegfs/beegfs-client-autobuild.conf"
          mode: 0644
        register: beegfs_client_autobuild

      - name: Force a rebuild of the client kernel module if requested or the source/configuration changed.
        ansible.builtin.command: "/etc/init.d/beegfs-client rebuild"
        when: beegfs_client_autobuild.changed or beegfs_client_force_rebuild == True or package_mgr_result.changed == True
        notify: Restart BeeGFS Client
    when: not beegfs_client_dkms_install
    tags: beegfs_client_install

  - name: Complete DKMS Client Tasks
    block:
      - name: Load the BeeGFS kernel module.
        ansible.builtin.modprobe:
          name: beegfs
          state: present

      - name: Set the BeeGFS kernel module to load at boot by creating /etc/modules-load.d/beegfs-client-dkms.client.
        ansible.builtin.blockinfile:
          path: /etc/modules-load.d/beegfs-client-dkms.conf
          create: true
          block: |
            # Load the BeeGFS client module at boot
            beegfs
    when: beegfs_client_dkms_install
    tags: beegfs_client_install

  - name: Include tasks to mount BeeGFS if requested.
    ansible.builtin.include_tasks: mount_beegfs.yml
    loop: "{{ beegfs_client_mounts }}"
    when: beegfs_client_mounts is defined
    tags: beegfs_client_mount

  - name: Flush handlers to restart the non-DKMS BeeGFS client on configuration changes.
    ansible.builtin.meta: flush_handlers
    tags:
      - beegfs_client_mount
      - beegfs_client_install

  - name: Verify all expected BeeGFS mounts are present/unmounted when using the non-DKMS client.
    ansible.builtin.include_tasks: mount_check.yml
    loop: "{{ beegfs_client_mounts }}"
    when: beegfs_client_mounts is defined and not beegfs_client_dkms_install
    tags: beegfs_client_mount

  - name: Flush handlers to restart the non-DKMS BeeGFS client if any BeeGFS mounts are missing.
    ansible.builtin.meta: flush_handlers
    tags: beegfs_client_mount

  - name: When using the non-DKMS BeeGFS client ensure it is started/enabled so mounts persist across reboots.
    ansible.builtin.systemd:
      name: beegfs-client
      state: started
      enabled: true
    when: beegfs_client_mounts is defined and not beegfs_client_dkms_install
    tags: beegfs_client_mount

  become: true
