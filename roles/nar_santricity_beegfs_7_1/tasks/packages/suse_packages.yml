- name: Add BeeGFS ZYPPER repository (SUSE).
  zypper_repository:
    name: beegfs
    description: BeeGFS ZYPPER Repo
    repo: "{{ beegfs_suse_repository_base_url }}"
    autorefresh: True
    state: present
    auto_import_keys: True
  when: "'.repo' in beegfs_suse_repository_base_url"

- name: Create BeeGFS repo file (SUSE).
  template:
    src: common/beegfs_suse_repo.j2
    dest: "/etc/zypp/repos.d/beegfs.repo"
  when: "'.repo' not in beegfs_suse_repository_base_url"

- name: Get kernel version (SUSE - Client).
  shell: "uname -r | cut -f 1,2 -d \"-\""
  register: shell_output
  failed_when: "shell_output.rc != 0"
  changed_when: False
  when: '"client" in beegfs_node_roles'

- name: Ensure kernel-devel is installed (SUSE - Client).
  zypper:
    name: "kernel-devel={{ shell_output.stdout_lines[0] }}"
    state: present
  when: '"client" in beegfs_node_roles'

- name: Ensure kernel-default-devel is installed (SUSE - Client).
  zypper:
    name: "kernel-default-devel={{ shell_output.stdout_lines[0] }}"
    state: present
  when: '"client" in beegfs_node_roles'

- name: Ensure kernel-source is installed (SUSE - Client).
  zypper:
    name: "kernel-source={{ shell_output.stdout_lines[0] }}"
    state: present
  when: '"client" in beegfs_node_roles'

- name: Ensure the BeeGFS management package is installed (SUSE - Management).
  zypper:
    state: |-
      {%- if beegfs_force_beegfs_upgrade %}latest{%- else %}present{%- endif %}
    name: beegfs-mgmtd
  when: '"management" in beegfs_node_roles'

- name: Ensure the BeeGFS metadata package is installed (SUSE - Metadata).
  zypper:
    state: |-
      {%- if beegfs_force_beegfs_upgrade %}latest{%- else %}present{%- endif %}
    name:
      - beegfs-meta
  when: '"metadata" in beegfs_node_roles'

- name: Ensure the BeeGFS storage package is installed (SUSE - Storage).
  zypper:
    state: |-
      {%- if beegfs_force_beegfs_upgrade %}latest{%- else %}present{%- endif %}
    name:
      - beegfs-storage
  when: '"storage" in beegfs_node_roles'

- name: Ensure the BeeGFS infiniband package is installed (SUSE - Metadata/Storage).
  zypper:
    state: |-
      {%- if beegfs_force_beegfs_upgrade %}latest{%- else %}present{%- endif %}
    name: libbeegfs-ib
  when: '("storage" in beegfs_node_roles or "metadata" in beegfs_node_roles) and beegfs_enable_rdma'

- name: Enable unsupported modules (SUSE - Client).
  replace:
    path: /etc/modprobe.d/10-unsupported-modules.conf
    regexp: 'allow_unsupported_modules 0'
    replace: 'allow_unsupported_modules 1'
  when: 'beegfs_allow_unsupported_module == True and "client" in beegfs_node_roles'

- name: Ensure the BeeGFS client package is installed (SUSE - Client).
  zypper:
    state: |-
      {%- if beegfs_force_beegfs_upgrade %}latest{%- else %}present{%- endif %}
    name:
      - beegfs-client
      - beegfs-helperd
      - beegfs-utils
  when: '"client" in beegfs_node_roles'

- name: Ensure NTP is installed (SUSE).
  zypper:
    state: latest
    name: ntp
  when: beegfs_ntp_enabled == True

- name: Ensure Chrony is uninstalled (SUSE).
  zypper:
    state: absent
    name: chrony
  when: beegfs_ntp_enabled == True
