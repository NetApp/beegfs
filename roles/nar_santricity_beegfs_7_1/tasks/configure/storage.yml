- name: Configure BeeGFS Storage Service.
  shell: "/opt/beegfs/sbin/beegfs-setup-storage -p {{ beegfs_data_directory }}beegfs/{{ item.name }} -m {{ beegfs_mgmt_node_ip }}"
  register: beegfs_setup_storage_result
  failed_when: "beegfs_setup_storage_result.rc != 0 and 'ERROR: Storage target directory is not empty.' not in beegfs_setup_storage_result.stdout"
  changed_when: "'ERROR: Storage target directory is not empty.' not in beegfs_setup_storage_result.stdout"
  loop: "{{ storage_volumes }}"

- name: Ensure beegfs-storage-connInterfaces.conf is properly configured (Storage).
  template:
    src: common/beegfs_connection_interfaces.j2
    dest: "{{ beegfs_configuration_directory }}beegfs-storage-connInterfaces.conf"
    owner: root
    group: root
    mode: 0644
  register: beegfs_storage_interface_conf

- name: Ensure beegfs-storage.conf is properly configured (Storage).
  template:
    src: storage/beegfs_storage_conf.j2
    dest: "{{ beegfs_configuration_directory }}beegfs-storage.conf"
  register: beegfs_storage_conf

- name: Override beegfs-storage.service systemd configuration to start service after remote-fs.target (Storage).
  blockinfile:
    create: yes
    path: /etc/systemd/system/beegfs-storage.service.d/99-nar_santricity_beegfs_override.conf
    block: |
      [Unit]
      Requires=remote-fs.target
      After=remote-fs.target
  register: beegfs_storage_service_override

- name: Start BeeGFS Storage Service.
  systemd:
    name: beegfs-storage.service
    state: |-
      {%- if beegfs_setup_storage_result.changed or beegfs_storage_interface_conf.changed or beegfs_storage_conf.changed or
             beegfs_storage_service_override.changed %}
      restarted
      {%- else %}
      started
      {%- endif %}
    daemon-reload: yes
    enabled: yes
