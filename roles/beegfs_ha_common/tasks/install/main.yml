# eseries_mount_force_format will only have value when defined globally or the first executing node.
- name: Prompt for force data format override.
  ansible.builtin.pause:
    prompt: "
      WARNING! eseries_mount_force_format is set to true. This will result in wiping all target file systems as part
      of this deployment. Are you sure you want to continue (yes/no)?"
  register: force_file_system
  run_once: true
  delay: 0
  retries: 10
  until: force_file_system['user_input'] | lower in ["yes", "no"]
  failed_when: force_file_system["user_input"] | lower == "no"
  when: eseries_mount_force_format is defined and eseries_mount_force_format
  tags: always

- name: Ask user whether to disable SELinux or not.
  block:
    - name: Ask user whether to disable SELinux or not.
      ansible.builtin.pause:
        prompt: "
          The variable eseries_beegfs_ha_disable_selinux has not been defined for {{ item }} and can be added to your
          inventory to avoid this message in the future. SELinux may result in known issues. Would you like to disable
          SELinux [yes/no/ctrl-c to stop]"
      register: disable_selinux_prompt
      when: hostvars[item]["eseries_beegfs_ha_disable_selinux"] is not defined
      loop: "{{ groups[beegfs_ha_ansible_cluster_group] }}"
      run_once: true
      delay: 0
      retries: 10
      until: disable_selinux_prompt['user_input'] | lower in ["yes", "no"]

    - name: Set eseries_beegfs_ha_disable_selinux variable based on user responses.
      ansible.builtin.set_fact:
        eseries_beegfs_ha_disable_selinux: |-
          {%- for result in disable_selinux_prompt["results"] if inventory_hostname == result["item"] -%}
            {{- result["user_input"] | lower == "yes" -}}
          {%- endfor -%}
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and eseries_beegfs_ha_disable_selinux is not defined

    - name: Set eseries_selinux_state to disabled.
      ansible.builtin.set_fact:
        eseries_selinux_state: disabled
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and eseries_beegfs_ha_disable_selinux
  tags:
    - beegfs_ha_configure
    - beegfs_ha

- name: Collect NetApp E-Series volume information (Always).
  ansible.builtin.include_tasks:
    file: ../collect_facts.yml
    apply:
      tags: always
  tags: always

- name: Ensure BeeGFS HA cluster nodes are in maintenance mode if cluster is available.
  block:
    - name: Ensure BeeGFS HA cluster nodes are in maintenance mode.
      ansible.builtin.include_tasks: common/maintenance/set.yml
  when: inventory_hostname == cluster_automation_node
  tags:
    - beegfs_ha_move_all_to_preferred
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Ensure BeeGFS service communications are configured.
  block:
    - name: Ensure InfiniBand IPoIB is configured.
      ansible.builtin.include_role:
        name: netapp_eseries.host.ipoib
      when: eseries_ipoib_interfaces is defined and inventory_hostname in groups[beegfs_ha_ansible_cluster_group]

    - name: Ensure RoCE is configured.
      ansible.builtin.include_role:
        name: netapp_eseries.host.roce
      when: eseries_roce_interfaces is defined and inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
  tags:
    - beegfs_ha_configure
    - beegfs_ha

- name: Ensure storage has been provisioned for hosts.
  block:
    - name: Ensure storage has been provisioned for hosts.
      ansible.builtin.include_role:
        name: netapp_eseries.santricity.nar_santricity_host
      when: inventory_hostname in groups[beegfs_ha_ansible_storage_group]
  tags:
    - storage_provision
    - storage

- name: Ensure multipath and protocol are setup.
  block:
    - name: Ensure multipath and protocol are setup.
      ansible.builtin.include_role:
        name: netapp_eseries.host.storage_setup
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and node_info["services"] | length > 0
  tags:
    - storage_communication
    - storage

- name: Ensure volumes are formatted but not mounted.
  block:
    - name: Ensure volumes are formatted but not mounted.
      ansible.builtin.include_role:
        name: netapp_eseries.host.mount
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and node_info["services"] | length > 0
      vars:
        eseries_mount_volumes: []   # This ensures that no volumes get mounted
        eseries_mount_skip_unmount: true
  tags:
    - storage_format
    - storage

- name: Ensure journald configuration options are configured.
  block:
    - name: Ensure journald configuration options are configured.
      ansible.builtin.include_tasks: common/journald.yml
  when: beegfs_ha_journald_allow_changes and inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
  become: true
  tags:
    - journald

- name: Update volume path information.
  block:
    - name: Update volume path information.
      ansible.builtin.include_tasks: ../update_facts.yml
  tags:
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Force expected BeeGFS and HA packages to be installed.
  block:
    - name: Attempt to return services to their preferred BeeGFS HA cluster nodes
      ansible.builtin.include_tasks: common/restore_cluster.yml

    # Execute all included tasks one cluster node at a time serially
    - name: Force BeeGFS packages upgrade
      ansible.builtin.include_tasks: packages_force.yml
      loop: "{{ groups[beegfs_ha_ansible_cluster_group] }}"
      loop_control:
        loop_var: force_upgrade_cluster_node
      when: inventory_hostname == force_upgrade_cluster_node

    - name: Ensure BeeGFS HA cluster nodes are in maintenance mode.
      ansible.builtin.include_tasks: common/maintenance/set.yml
  when: beegfs_ha_force_upgrade
  tags:
    - beegfs_ha_package
    - beegfs_ha

- name: Ensure expected BeeGFS and HA packages are installed
  block:
    - name: Ensure expected BeeGFS and HA packages are installed
      ansible.builtin.include_tasks: packages.yml
  when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
  tags:
    - beegfs_ha_package
    - beegfs_ha

- name: Setup and configure Pacemaker resources on hosts.
  block:
    - name: Ensure E-Series BeeGFS HA resources agents are installed.
      ansible.builtin.include_tasks: resource_agents.yml
  when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and node_info["services"] | length > 0
  tags:
    - beegfs_ha_resource_agent
    - beegfs_ha_configure
    - beegfs_ha_package
    - beegfs_ha

- name: Configure performance tuning.
  block:
    - name: BeeGFS performance tuning (Storage/Metadata).
      ansible.builtin.include_tasks: performance_tuning.yml
      when: 'beegfs_ha_enable_performance_tuning == True and (inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and
                                                              ("metadata" in node_info["services"] or "storage" in node_info["services"]))'
  tags:
    - beegfs_ha
    - beegfs_ha_performance_tuning

- name: Ensure common BeeGFS HA tasks are applied to all cluster nodes.
  block:
    - name: Ensure common BeeGFS HA tasks are applied to all cluster nodes.
      ansible.builtin.include_tasks: common.yml
  when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
  tags:
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Ensure BeeGFS services are configured on cluster nodes.
  block:
    - name: Ensure common BeeGFS HA service tasks are configured.
      ansible.builtin.include_tasks: services/common.yml
      when: node_info["services"] | length > 0

    - name: Ensure BeeGFS HA management resource group is configured.
      ansible.builtin.include_tasks: services/management.yml
      when: '"management" in node_info["services"]'

    - name: Ensure BeeGFS HA metadata resource group is configured.
      ansible.builtin.include_tasks: services/metadata.yml
      when: '"metadata" in node_info["services"]'

    - name: Ensure BeeGFS HA storage resource group is configured.
      ansible.builtin.include_tasks: services/storage.yml
      when: '"storage" in node_info["services"]'
  when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
  tags:
    - beegfs_ha_configure
    - beegfs_ha

- name: Ensure BeeGFS HA cluster resources are correct.
  block:
    - name: Ensure BeeGFS HA cluster resources are correct.
      ansible.builtin.include_tasks: resources.yml
      when: inventory_hostname == cluster_automation_node
  tags:
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Ensure pacemaker services are started and enabled.
  block:
    - name: Ensure pacemaker_remote is enabled and started on remote nodes.
      ansible.builtin.systemd:
        state: started
        enabled: true
        name: pacemaker_remote
      when: not beegfs_ha_pacemaker_cluster_node

    - name: Ensure cluster nodes have joined the cluster.
      ansible.builtin.systemd:
        state: started
        enabled: "{{ beegfs_ha_pacemaker_enabled }}"
        name: "{{ item }}"
      when: beegfs_ha_pacemaker_cluster_node
      loop: ["corosync", "pacemaker"]
  when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
  become: true
  tags:
    - beegfs_ha_move_all_to_preferred
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Attempt to return cluster to an optimal state.
  block:
    - name: Attempt to return services to their preferred BeeGFS HA cluster nodes
      ansible.builtin.include_tasks: common/restore_cluster.yml
  when: inventory_hostname == cluster_automation_node
  become: true
  tags:
    - beegfs_ha_move_all_to_preferred
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Restore temporary cluster attributes.
  block:
    - name: Enable fencing since cluster is fully started.
      ansible.builtin.command: crm_attribute --type crm_config --name stonith-enabled --update True
  when: inventory_hostname == cluster_automation_node
  become: true
  tags:
    - beegfs_ha_move_all_to_preferred
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha

- name: Backup current BeeGFS HA configuration.
  block:
    - name: Backup current BeeGFS HA configuration.
      ansible.builtin.include_tasks: ../backup.yml
      when: inventory_hostname == cluster_automation_node
  tags:
    - beegfs_ha_configure_resource
    - beegfs_ha_configure
    - beegfs_ha_backup
    - beegfs_ha
