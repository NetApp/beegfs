- name: Add BeeGFS YUM repository (RedHat/CentOS).
  yum_repository:
    name: beegfs
    description: BeeGFS YUM Repo
    file: beegfs_rhel
    baseurl: "{{ beegfs_ha_rhel_repository_base_url }}"
    enabled: true
    gpgcheck: true
    gpgkey: "{{ beegfs_ha_rhel_repository_gpgkey }}"
  register: yum_repository
  become: true

- name: Ensure the BeeGFS management package is installed (RedHat/CentOS - Management).
  ansible.builtin.yum:
    state: "{% if beegfs_ha_force_upgrade %}latest{% else %}present{% endif %}"
    allow_downgrade: true
    name: "beegfs-mgmtd{% if beegfs_ha_beegfs_version is defined and beegfs_ha_beegfs_version %}-{{ beegfs_ha_beegfs_version }}{% endif %}"
  register: beegfs_mgmtd_package
  when: '"management" in node_info["services"]'
  become: true

- name: Stop beegfs-mgmtd service.
  ansible.builtin.systemd:
    name: beegfs-mgmtd.service
    state: stopped
    enabled: false
  when: beegfs_mgmtd_package['changed'] == True
  become: true

- name: Ensure the BeeGFS metadata package is installed (RedHat/CentOS - Metadata).
  ansible.builtin.yum:
    state: "{% if beegfs_ha_force_upgrade %}latest{% else %}present{% endif %}"
    allow_downgrade: true
    name: "beegfs-meta{% if beegfs_ha_beegfs_version is defined and beegfs_ha_beegfs_version %}-{{ beegfs_ha_beegfs_version }}{% endif %}"
  register: beegfs_meta_package
  when: '"metadata" in node_info["services"]'
  become: true

- name: Stop beegfs-metadata service.
  ansible.builtin.systemd:
    name: beegfs-meta.service
    state: stopped
    enabled: false
  when: beegfs_meta_package['changed'] == True
  become: true

- name: Ensure the BeeGFS storage package is installed (RedHat/CentOS - Storage).
  ansible.builtin.yum:
    state: "{% if beegfs_ha_force_upgrade %}latest{% else %}present{% endif %}"
    allow_downgrade: true
    name: "beegfs-storage{% if beegfs_ha_beegfs_version is defined and beegfs_ha_beegfs_version %}-{{ beegfs_ha_beegfs_version }}{% endif %}"
  register: beegfs_storage_package
  when: '"storage" in node_info["services"]'
  become: true

- name: Stop beegfs-storage service.
  ansible.builtin.systemd:
    name: beegfs-storage.service
    state: stopped
    enabled: false
  when: beegfs_storage_package['changed'] == True
  become: true

- name: Ensure the BeeGFS infiniband package is installed (RedHat/CentOS - Metadata/Storage).
  block:
    - name: Ensure the BeeGFS infiniband package is removed when metadata/storage packages are installed/upgraded to avoid potential conflicts (RedHat/CentOS - Metadata/Storage).
      ansible.builtin.yum:
        state: absent
        name: libbeegfs-ib
      when: beegfs_meta_package['changed'] or beegfs_storage_package['changed']
    - name: Ensure the BeeGFS infiniband package is installed (RedHat/CentOS - Metadata/Storage).
      ansible.builtin.yum:
        state: "{% if beegfs_ha_force_upgrade %}latest{% else %}present{% endif %}"
        allow_downgrade: true
        name: libbeegfs-ib
  when: '("metadata" in node_info["services"] or "storage" in node_info["services"]) and node_info["service_configuration_options"]["connUseRDMA"] | default(true)'
  become: true

- name: Ensure the numactl package is installed (RedHat/CentOS - Metadata/Storage).
  ansible.builtin.yum:
    state: "{% if beegfs_ha_force_upgrade %}latest{% else %}present{% endif %}"
    name: numactl
  when: '"metadata" in node_info["services"] or "storage" in node_info["services"]'
  become: true

- name: Ensure bc is installed (RedHat/CentOS).
  ansible.builtin.yum:
    state: present
    name: bc
  become: true
