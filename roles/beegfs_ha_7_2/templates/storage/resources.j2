{% for host in groups[beegfs_ha_ansible_cluster_group] if "storage" in (hostvars[host]["node_info"].keys() | list) %}
  {%- for info in hostvars[host]["node_info"]["storage"] if host in info["preferred_node_order"][0] -%}
    {%- set group = info["resource_group"] -%}
    {%- set volumes = info["volumes"] -%}
    {%- set floating_ips = info["floating_ips"] %}

<primitive class="ocf" id="{{ group }}-monitor" provider="eseries" type="beegfs-monitor">
  <instance_attributes id="{{ group }}-monitor-instance_attributes">
    <nvpair id="{{ group }}-monitor-instance_attributes-service_group" name="service_group" value="{{ group }}"/>
    <nvpair id="{{ group }}-monitor-instance_attributes-service_type" name="service_type" value="storage"/>
    <nvpair id="{{ group }}-monitor-instance_attributes-service_name" name="service_name" value="beegfs-storage@{{ volumes[0]['name'] }}"/>
    <nvpair id="{{ group }}-monitor-instance_attributes-service_configuration_mount" name="service_configuration_mount" value="{{ volumes[0]["metadata"]["mount_dir"] }}{{  volumes[0]["name"] }}/"/>
  </instance_attributes>
  <operations>
    <op id="{{ group }}-monitor-start" interval="0s" name="start" timeout="{{ beegfs_ha_resource_monitor_start_timeout }}"/>
    <op id="{{ group }}-monitor-monitor" interval="{{ beegfs_ha_resource_monitor_monitor_interval }}" name="monitor" timeout="{{ beegfs_ha_resource_monitor_monitor_timeout }}" on-fail="{% if beegfs_ha_enable_fence == True %}fence{% else %}standby{% endif %}"/>
    <op id="{{ group }}-monitor-stop" interval="0s" name="stop" timeout="{{ beegfs_ha_resource_monitor_stop_timeout }}"/>
  </operations>
  <meta_attributes id="{{ group }}-monitor-meta_attributes">
    <nvpair id="{{ group }}-monitor-meta_attributes-migration-threshold" name="migration-threshold" value="1"/>
  </meta_attributes>
</primitive>

<group id="{{ group }}-group">

    {%- for volume in volumes -%}
      {%- set volume_name = volume["name"] -%}
      {%- set volume_path = volume["path"] -%}
      {%- set mount_dir = volume["metadata"]["mount_dir"] -%}
      {%- set format_type = volume["metadata"]["format_type"] -%}
      {%- set mount_options = volume["metadata"]["mount_options"] %}

  <primitive class="ocf" id="{{ group }}-FS{{ loop["index"] }}" provider="heartbeat" type="Filesystem">
    <instance_attributes id="{{ group }}-FS{{ loop["index"] }}-instance_attributes">
      <nvpair id="{{ group }}-FS{{ loop["index"] }}-instance_attributes-device" name="device" value="{{ volume_path }}"/>
      <nvpair id="{{ group }}-FS{{ loop["index"] }}-instance_attributes-directory" name="directory" value="{{ mount_dir }}{{ volume_name }}"/>
      <nvpair id="{{ group }}-FS{{ loop["index"] }}-instance_attributes-fstype" name="fstype" value="{{ format_type }}"/>
      <nvpair id="{{ group }}-FS{{ loop["index"] }}-instance_attributes-options" name="options" value="{{ mount_options }}"/>
    </instance_attributes>
    <operations>
      <op id="{{ group }}-FS{{ loop["index"] }}-monitor" interval="{{ beegfs_ha_resource_filesystem_monitor_interval }}" name="monitor"/>
      <op id="{{ group }}-FS{{ loop["index"] }}-start" interval="0s" name="start" timeout="{{ beegfs_ha_resource_filesystem_start_timeout }}"/>
      <op id="{{ group }}-FS{{ loop["index"] }}-notify" interval="0s" name="notify" timeout="{{ beegfs_ha_resource_filesystem_notify_timeout }}"/>
      <op id="{{ group }}-FS{{ loop["index"] }}-stop" interval="0s" name="stop" timeout="{{ beegfs_ha_resource_filesystem_stop_timeout }}"/>
    </operations>
  </primitive>

      {%- endfor %}

    {%- for floating_ip in floating_ips -%}
      {%- set floating_ip_info = floating_ip.split(":") -%}
      {%- set interface = floating_ip_info[0] -%}
      {%- set address = floating_ip_info[1].split("/")[0] -%}
      {%- set cidr_netmask = floating_ip_info[1].split("/")[1] -%}
      {%- set iflabel = group[:12] ~ "_" ~ loop.index -%}
      {%- set ipaddr_id = group ~ "-IP" ~ loop["index"] %}
  <primitive class="ocf" id="{{ ipaddr_id }}" provider="heartbeat" type="IPaddr2">
    <instance_attributes id="{{ ipaddr_id }}-instance_attributes">
      <nvpair id="{{ ipaddr_id }}-instance_attributes-cidr_netmask" name="cidr_netmask" value="{{ cidr_netmask }}"/>
      <nvpair id="{{ ipaddr_id }}-instance_attributes-flush_routes" name="flush_routes" value="1"/>
      <nvpair id="{{ ipaddr_id }}-instance_attributes-iflabel" name="iflabel" value="{{ iflabel }}"/>
      <nvpair id="{{ ipaddr_id }}-instance_attributes-ip" name="ip" value="{{ address }}"/>
      <nvpair id="{{ ipaddr_id }}-instance_attributes-nic" name="nic" value="{{ interface }}"/>
    </instance_attributes>
    <operations>
      <op id="{{ ipaddr_id }}-start" interval="0s" name="start" timeout="{{ beegfs_ha_resource_floating_ips_start_timeout}}"/>
      <op id="{{ ipaddr_id }}-monitor" interval="{{ beegfs_ha_resource_floating_ips_monitor_interval }}" name="monitor" timeout="{{ beegfs_ha_resource_floating_ips_monitor_timeout }}"/>
      <op id="{{ ipaddr_id }}-stop" interval="0s" name="stop" timeout="{{ beegfs_ha_resource_floating_ips_stop_timeout }}"/>
    </operations>
  </primitive>
    {%- endfor %}

    {%- if beegfs_ha_enable_alerts == True -%}
      {%- for email in beegfs_ha_alert_email_list -%}
        {%- set alert_id = group ~ "-mailto" ~ loop["index"] %}
  <primitive class="ocf" id="{{ alert_id }}" provider="heartbeat" type="MailTo">
    <instance_attributes id="{{ alert_id }}-instance_attributes">
      <nvpair id="{{ alert_id }}-instance_attributes-email" name="email" value="{{ email }}"/>
      <nvpair id="{{ alert_id }}-instance_attributes-subject" name="subject" value="{{ beegfs_ha_alert_email_subject }}"/>
    </instance_attributes>
    <operations>
      <op id="{{ alert_id }}-start" interval="0s" name="start" timeout="{{ beegfs_ha_resource_alert_start_timeout }}"/>
      <op id="{{ alert_id }}-monitor" interval="{{ beegfs_ha_resource_alert_monitor_interval }}" name="monitor" timeout="{{ beegfs_ha_resource_alert_monitor_timeout }}"/>
      <op id="{{ alert_id }}-stop" interval="0s" name="stop" timeout="{{ beegfs_ha_resource_alert_stop_timeout }}"/>
    </operations>
  </primitive>
      {%- endfor -%}
    {%- endif %}

  <primitive class="systemd" id="{{ group }}-service" type="beegfs-storage@{{ volumes[0]["name"] }}">
    <operations>
      <op id="{{ group }}-service-monitor" interval="{{ beegfs_ha_resource_storage_monitor_interval }}" name="monitor"/>
      <op id="{{ group }}-service-start" interval="0s" name="start" timeout="{{ beegfs_ha_resource_storage_start_timeout }}"/>
      <op id="{{ group }}-service-stop" interval="0s" name="stop" timeout="{{ beegfs_ha_resource_storage_stop_timeout }}"/>
    </operations>
  </primitive>
</group>

  {% endfor %}
{% endfor %}