# Managed by Ansible and NetApp's E-Series BeeGFS role
# DO NOT MODIFY - Update Ansible's inventory to make changes

# This is a config file for the automatic build process of BeeGFS client kernel
# modules.
# http://www.beegfs.com


#
# --- Section: [Notes] ---
#

# General Notes
# =============
# To force a rebuild of the client modules:
#  $ /etc/init.d/beegfs-client rebuild
#
# To see a list of available build arguments:
#  $ make help -C /opt/beegfs/src/client/client_module_${BEEGFS_MAJOR_VERSION}/build
#
#  Help example for BeeGFS 2015.03 release:
#   $ make help -C /opt/beegfs/src/client/client_module_2015.03/build


# RDMA Support Notes
# ==================
# If you want to build BeeGFS with RDMA support based on ibverbs for InfiniBand,
# RDMA over converged Ethernet (RoCE) or Omni-Path, add
# "BEEGFS_OPENTK_IBVERBS=1" to the "buildArgs" below.
#
# If you installed InfiniBand kernel modules from OpenFabrics OFED, then also
# define the correspsonding header include path by adding
# "OFED_INCLUDE_PATH=<path>" to the "buildArgs", where <path> usually is
# "/usr/src/openib/include" or "/usr/src/ofa_kernel/default/include" for
# Mellanox OFED.


#
# --- Section: [Build Settings] ---
#

# Build Settings
# ==============
# These are the arguments for the client module "make" command.
#
# Note: Quotation marks and equal signs can be used without escape characters
# here.
#
# Example1:
#  buildArgs=-j8 BEEGFS_OPENTK_IBVERBS=1
#
# Example2 (see "RDMA Support Notes" above):
#  buildArgs=-j8 BEEGFS_OPENTK_IBVERBS=1 OFED_INCLUDE_PATH=/usr/src/openib/include
#
# Default:
#  buildArgs=-j8

buildArgs=-j8 {% if beegfs_ha_enable_rdma == True %}BEEGFS_OPENTK_IBVERBS=1{% endif %} {% if beegfs_ha_ofed_include_path is defined %}OFED_INCLUDE_PATH={{ beegfs_ha_ofed_include_path }}{% endif %}


# Turn Autobuild on/off
# =====================
# Controls whether modules will be built on "/etc/init.d/beegfs-client start".
#
# Note that even if autobuild is enabled here, the modules will only be built
# if no beegfs kernel module for the current kernel version exists in
# "/lib/modules/<kernel_version>/updates/".
#
# Default:
#  buildEnabled=true

buildEnabled=true
