- name: Ensure expected BeeGFS packages are installed (Always).
  include_tasks: "../packages/{{ ansible_os_family | lower }}_client_only.yml"

- name: Ensure the required firewall ports are open.
  include_tasks: ../common/firewall.yml

- name: Ensure the ntp is configured.
  include_tasks: ../common/ntp.yml

- name: Ensure /etc/hosts file is populated with cluster nodes and floating IP addresses.
  include_tasks: ../common/hosts.yml

- name: Ensure beegfs-client.conf is properly configured (Client).
  template:
    src: "{{ lookup('netapp_eseries.beegfs.eseries_template_path', 'client/beegfs_client_conf.j2') }}"
    dest: "{{ beegfs_ha_client_configuration_directory }}beegfs-client.conf"
  register: client_conf
  become: true

- name: Ensure beegfs-client-connInterfaces.conf is properly configured (Client).
  template:
    src: "{{ lookup('netapp_eseries.beegfs.eseries_template_path', 'client/beegfs_client_connInterfacesFile_conf.j2') }}"
    dest: "{{ beegfs_ha_client_configuration_directory }}beegfs-client-connInterfaces.conf"
    owner: root
    group: root
    mode: 0644
  register: client_interfaces_conf
  become: true

- name: Ensure beegfs-client-autobuild.conf is properly configured (Client).
  template:
    src: "{{ lookup('netapp_eseries.beegfs.eseries_template_path', 'client/beegfs_client_autobuild_conf.j2') }}"
    dest: "{{ beegfs_ha_client_configuration_directory }}beegfs-client-autobuild.conf"
  register: client_autobuild_conf
  become: true

- name: Ensure helperd service is running.
  systemd:
    name: beegfs-helperd.service
    state: "{% if beegfs_ha_client_started == true %}started{% else %}stopped{% endif %}"
    daemon-reload: true
    enabled: true
  become: true

- name: Ensure the BeeGFS client kernel module is updated (Client).
  command:
    cmd: "/etc/init.d/beegfs-client rebuild"
  become: true
  when: client_autobuild_conf['changed']

- name: Ensure client service is running.
  systemd:
    name: beegfs-client.service
    state: |-
      {%- if beegfs_ha_client_started == false -%}
        stopped
      {%- elif client_conf['changed'] or client_interfaces_conf['changed'] or client_autobuild_conf['changed'] -%}
        restarted
      {%- else -%}
        started
      {%- endif -%}
    daemon-reload: true
    enabled: true
  become: true

- name: Determine whether locate's updatedb.conf file exists.
  command:
    cmd: "grep -o PRUNEFS.* {{ beegfs_ha_client_updatedb_conf_path }}"
  register: updatedb_prunefs
  changed_when: false
  failed_when: false
  become: true

- name: Ensure locate system scan will not scan beegfs.
  lineinfile:
    state: present
    path: "{{ beegfs_ha_client_updatedb_conf_path }}"
    backup: true
    regexp: "^PRUNEFS.*$"
    line: 'PRUNEFS = "{{ existing_prunefs }} beegfs"'
  when: updatedb_prunefs['rc'] == 0 and 'beegfs' not in existing_prunefs
  become: true
  vars:
    existing_prunefs: |-
      {{- updatedb_prunefs["stdout"] | default("") | regex_replace('PRUNEFS\s*=\s*|"', "", ignorecase=True) -}}

- name: Wait for BeeGFS to be ready.
  command:
    cmd: "beegfs-check-servers -e"
  register: beegfs_check_servers
  changed_when: false
  retries: 60
  delay: 3
  until: beegfs_check_servers['rc'] == 0
  become: true
