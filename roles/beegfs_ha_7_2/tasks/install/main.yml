- name: Ensure BeeGFS HA cluster is installed.
  block:
    - name: Collect NetApp E-Series volume information (Always).
      import_tasks: ../collect_facts.yml
      tags:
        - always

    # Client IP over IB needs to be configured prior to storage configuration to avoid unnecessary configuration.
    #   This is because ipoib role variables are defined for other IB related storage protocols.
    - name: Ensure InfiniBand IPoIB is configured.
      block:
        - name: Ensure InfiniBand IPoIB is configured.
          include_role:
            name: netapp_eseries.host.ipoib
          when: eseries_ipoib_interfaces is defined and (inventory_hostname in groups[beegfs_ha_ansible_cluster_group] or inventory_hostname in groups[beegfs_ha_ansible_client_group] | default([]))
      tags:
        - beegfs_ha_client
        - beegfs_ha_configure
        - beegfs_ha

    - name: Ensure storage has been provisioned for hosts.
      block:
        - name: Ensure storage has been provisioned for hosts.
          include_role:
            name: netapp_eseries.santricity.nar_santricity_host
          when: inventory_hostname in groups[beegfs_ha_ansible_storage_group]
      tags:
        - storage_provision
        - storage

    - name: Ensure multipath and iscsi protocol are setup.
      block:
        - name: Ensure multipath and iscsi protocol are setup.
          include_role:
            name: netapp_eseries.host.storage_setup
          when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
          vars:
            eseries_common_force_skip_uninstall: true
      tags:
        - storage_communication
        - storage

    - name: Ensure volumes are formatted but not mounted.
      block:
        - name: Ensure volumes are formatted but not mounted.
          include_role:
            name: netapp_eseries.host.mount
          when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
          vars:
            eseries_mount_volumes: []   # This ensures that no volumes get mounted
            eseries_mount_skip_unmount: true
            eseries_common_force_skip_uninstall: true
      tags:
        - storage_format
        - storage

    - name: Update volume path information.
      import_tasks: ../update_facts.yml
      tags:
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha

    - name: Setup and configure BeeGFS on hosts.
      block:
        - name: Ensure expected BeeGFS packages are installed.
          ansible.builtin.include_tasks: packages.yml
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
      tags:
        - beegfs_ha_package
        - beegfs_ha

    - name: Setup and configure Pacemaker resources on hosts.
      block:
        - name: Ensure E-Series BeeGFS HA resources agents are installed.
          ansible.builtin.include_tasks: resource_agents.yml
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
      tags:
        - beegfs_ha_resource_agent
        - beegfs_ha_configure
        - beegfs_ha_package
        - beegfs_ha

    - name: Configure performance tuning.
      block:
        - name: BeeGFS performance tuning (Storage/Metadata).
          ansible.builtin.include_tasks: performance_tuning.yml
          when: 'beegfs_ha_enable_performance_tuning == True and (inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and
                                                                  ("metadata" in node_info["services"] or "storage" in node_info["services"]))'
      tags:
        - beegfs_ha
        - beegfs_ha_performance_tuning

    - name: Ensure common BeeGFS HA tasks are applied to BeeGFS service nodes (Management/Metadata/Storage).
      block:
        - name: Ensure common BeeGFS HA tasks are applied to BeeGFS service nodes (Management/Metadata/Storage).
          ansible.builtin.include_tasks: common.yml
          when: 'inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and ("management" in node_info["services"] or
                                                                                    "metadata" in node_info["services"] or "storage" in node_info["services"])'
      tags:
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha

    - name: Ensure BeeGFS HA cluster is in maintenance mode.
      block:
        - name: Ensure BeeGFS HA cluster is in maintenance mode.
          ansible.builtin.command:
            cmd: "crm_attribute --name maintenance-mode --update true"
          changed_when: false
      when: inventory_hostname == preferred_management_node
      become: true
      tags:
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha

    - name: Ensure BeeGFS HA cluster is configured.
      block:
        - name: Ensure BeeGFS HA management resource group is configured.
          ansible.builtin.include_tasks: services/management.yml
          when: '"management" in node_info["services"]'

        - name: Ensure BeeGFS HA metadata resource group is configured.
          ansible.builtin.include_tasks: services/metadata.yml
          when: '"metadata" in node_info["services"]'

        - name: Ensure BeeGFS HA storage resource group is configured.
          ansible.builtin.include_tasks: services/storage.yml
          when: '"storage" in node_info["services"]'
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
      tags:
        - beegfs_ha_configure
        - beegfs_ha

    - name: Ensure BeeGFS HA cluster resources are correct.
      block:
        - name: Ensure BeeGFS HA cluster resources are correct.
          ansible.builtin.include_tasks: resources.yml
          when: inventory_hostname == preferred_management_node
      tags:
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha

    - name: Ensure pacemaker_remote is enabled and started on remote nodes.
      block:
        - name: Ensure pacemaker_remote is enabled and started on remote nodes.
          ansible.builtin.systemd:
            state: started
            enabled: true
            name: pacemaker_remote
          when: beegfs_ha_pacemaker_cluster_node == False
          become: true
      tags:
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha

    - name: Ensure BeeGFS HA cluster is out of maintenance and standby modes.
      block:
        - name: Move cluster out of maintenance mode.
          ansible.builtin.command:
            cmd: "crm_attribute --name maintenance-mode --delete"
          changed_when: false
          when: inventory_hostname == preferred_management_node

        - name: Move any cluster nodes out of standby mode.
          ansible.builtin.command:
            cmd: "crm_standby --node={{ inventory_hostname }} --delete"
          changed_when: false

        - name: Wait for cluster changes to stabilize.
          ansible.builtin.command:
            cmd: "crm_resource --wait"
          changed_when: false
          when: inventory_hostname == preferred_management_node
      when: inventory_hostname in groups[beegfs_ha_ansible_cluster_group]
      become: true
      tags:
        - beegfs_ha_move_resource_to_preferred_node
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha


    - name: Attempt to return services to their preferred BeeGFS HA cluster nodes.
      block:
        - name: Attempt to return services to their preferred BeeGFS HA cluster nodes.
          include_tasks: move.yml
          when: beegfs_ha_force_resource_move == True and inventory_hostname == preferred_management_node
      tags:
        - beegfs_ha_move_resource_to_preferred_node
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha

    - name: Verify all Pacemaker resources are started.
      block:
        - name: Retry until resources are all started
          ansible.builtin.include_tasks: validate_resources.yml

        - name: Warn when resources are not all started.
          fail:
            msg: "Warning! The following cluster resources are not running: {{ resources_not_started }}"
          when: resources_not_started | length > 0
          ignore_errors: true
          run_once: true
      when: 'inventory_hostname in groups[beegfs_ha_ansible_cluster_group] and ("management" in node_info["services"] or
                                                                                "metadata" in node_info["services"] or "storage" in node_info["services"])'
      tags:
        - beegfs_ha_validation
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        #- beegfs_ha_client
        - beegfs_ha

    - name: Backup current BeeGFS HA configuration.
      block:
        - name: Backup current BeeGFS HA configuration.
          ansible.builtin.include_tasks: ../backup.yml
          when: inventory_hostname == preferred_management_node
      tags:
        - beegfs_ha_configure_resource
        - beegfs_ha_configure
        - beegfs_ha_backup
        - beegfs_ha

    - name: Ensure BeeGFS HA clients are configured.
      block:
        - name: Ensure BeeGFS HA clients are configured.
          ansible.builtin.include_tasks: services/client.yml
          when: beegfs_ha_client_installed == True and inventory_hostname in groups[beegfs_ha_ansible_client_group] | default([])

        - name: Ensure BeeGFS HA clients are removed.
          ansible.builtin.include_tasks: ../uninstall/services/client.yml
          when: beegfs_ha_client_installed == False and inventory_hostname in groups[beegfs_ha_ansible_client_group] | default([])
      tags:
        - beegfs_ha_client
        - beegfs_ha
  when: beegfs_ha_uninstall == False
