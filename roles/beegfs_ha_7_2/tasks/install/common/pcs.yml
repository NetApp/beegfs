- name: Set pcs cluster password.
  user:
    name: "{{ beegfs_ha_cluster_username }}"
    password: "{{ beegfs_ha_cluster_password | password_hash('sha512', beegfs_ha_cluster_password_sha512_salt) }}"
    create_home: false
  become: true

- name: Determine whether pcs has only tokens for the expected cluster nodes.
  block:
    - name: Fetch pcs tokens file.
      fetch:
        src: "{{ beegfs_ha_pcsd_pcsd_path }}tokens"
        dest: "/tmp/~pcs_tokens_{{ inventory_hostname }}"
        flat: true
      changed_when: false
      failed_when: false
      ignore_errors: true

    - name: Determine whether only expected cluster nodes are accounted for.
      set_fact:
        update_pcs_required: |-
          {%- set scratch = {"valid_token_files": True} -%}
            {%- for host in groups[beegfs_ha_ansible_cluster_group] -%}
              {%- set current = lookup("file", "/tmp/~pcs_tokens_" ~ host) | default({}) -%}
              {%- if "previous" not in (scratch.keys() | list) -%}
                {%- if scratch.update({"previous": current }) -%}{%- endif -%}
              {%- endif -%}

              {%- if scratch["previous"] == {} or scratch["previous"] != current -%}
                {%- if scratch.update({"valid_token_files": False}) -%}{%- endif -%}
              {%- endif -%}
            {%- endfor -%}

          {%- if scratch["valid_token_files"] == False -%}
            {%- set tokens_nodes = (scratch["previous"] | from_json)["tokens"].keys() | list | sort -%}
            {%- set expected_nodes = groups[beegfs_ha_ansible_cluster_group] | sort -%}
            {{- tokens_nodes != expected_nodes -}}
          {%- else -%}
            {{- False -}}
          {%- endif -%}
      run_once: true
      ignore_errors: true

    - name: Delete temporary local pcs tokens file.
      file:
        state: absent
        path: /tmp/~pcs_tokens
      delegate_to: localhost
      changed_when: false
      failed_when: false
  become: true

- name: Ensure pcs cluster has been authenticated.
  block:
    - name: Delete existing pcs tokens file.
      file:
        state: absent
        path: "{{ beegfs_ha_pcsd_pcsd_path }}tokens"

    - name: Ensure pcs cluster has been authenticated.
      command:
        cmd: "pcs cluster reload corosync"
      when: inventory_hostname == preferred_management_node

    - name: Ensure pcs cluster has been authenticated.
      command:
        cmd: "pcs cluster auth -u {{ beegfs_ha_cluster_username }} -p {{ beegfs_ha_cluster_password }}"
      when: inventory_hostname == preferred_management_node
  when: update_pcs_required == True
  become: true
