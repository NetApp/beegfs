# General configuration defaults
beegfs_ha_ansible_cluster_group: ha_cluster                # Name for the pacemaker cluster.
beegfs_ha_ansible_storage_group: eseries_storage_systems   # Name of the Ansible E-Series storage group
beegfs_ha_cluster_name: hacluster                          # Pacemaker cluster group name
beegfs_ha_cluster_username: hacluster                      # Cluster group's username
beegfs_ha_cluster_password: hapassword                     # Cluster group's password
beegfs_ha_cluster_password_sha512_salt: randomSalt         # Cluster group's password salt
# beegfs_ha_cluster_node_ips: []                           # Defines an order list of IP addresses or hostnames with the first having the highest priority. When
                                                           #    there are no listed IPs then node name will be used. Node names are defined in /etc/hosts.
beegfs_ha_allow_firewall_high_availability_service: true   # Allow high-availability firewall services.
beegfs_ha_alert_email_subject: "ClusterNotification"
beegfs_ha_alert_email_list: []  # List of emails to alert when changes occur.

# THESE CONFIGURATION OPTIONS ARE IN THE COROSYNC.CONF FILE
#beegfs_ha_enable_auto_tie_breaker: true
#beegfs_ha_enable_auto_tie_breaker_force_update: false
beegfs_ha_enable_alerts: true
beegfs_ha_enable_quota: false
beegfs_ha_enable_fence: true  # Fencing agents should be used to ensure failed nodes are definitely down.  WARNING! If beegfs_ha_enable_fence is set to false then a fencing agent will not be configured!
beegfs_ha_enable_fence_action: "off"  # Fence agent will by default shutdown when stoned. Options: off, reboot
beegfs_ha_pacemaker_cluster_node_join_state: "default"  # This is the state cluster nodes will join the cluster (Choices: default, online, standby).
beegfs_ha_pacemaker_cluster_node: true  # Whether node should be a pacemaker cluster node. When set to false the node will be a pacemaker remote node. Note that corosync 2 only supports 32 cluster nodes. (Default: true)
beegfs_ha_pacemaker_enabled: false  # Whether pacemaker and corosync should be started by systemd during the boot process
beegfs_ha_filter_ip_ranges: []
beegfs_ha_node_preference_scope_step: 200

beegfs_ha_cluster_crm_config_defaults: # WARNING! These defaults are required for high-avaiability.
  symmetric-cluster: false  # Opt-in architecture
  fence-reaction: stop  # Allows cluster nodes with a fence resource to fence itself.
  concurrent-fencing: true # Allows cluster nodes to be fenced concurrently.

beegfs_ha_cluster_resource_defaults:
  resource-stickiness: 15000
  cluster-ipc-limit: 500
beegfs_ha_fencing_agents: {}
beegfs_ha_backup: true
beegfs_ha_backup_path: /tmp/
beegfs_ha_storage_system_hostgroup_prefix: beegfs
beegfs_ha_force_resource_move: true   # Forces node and resource changes to migrate services to preferred nodes.

# BeeGFS pacemaker resource configuration defaults
beegfs_ha_resource_agent_path: /usr/lib/ocf/resource.d/
beegfs_ha_resource_monitor_monitor_interval: 3s      # BeeGFS monitoring service monitor interval - Time interval from end of monitor action call to the start of another monitor action call.
beegfs_ha_resource_monitor_monitor_timeout: 30s      # BeeGFS monitoring service monitor timeout - Maximum time allowed for the monitor action call before failing.
beegfs_ha_resource_monitor_start_timeout: 30s        # BeeGFS monitoring service start timeout - Maximum time allowed for the service to start.
beegfs_ha_resource_monitor_stop_timeout: 30s         # BeeGFS monitoring service stop timeout - Maximum time allowed for the service to stop.
beegfs_ha_resource_monitor_migration_threshold: 1    # BeeGFS monitoring service failures before migrating away from failed node.
beegfs_ha_resource_filesystem_monitor_interval: 17s  # ocf:heartbeat:Filesystem resource monitor operation interval
beegfs_ha_resource_filesystem_stop_timeout: 30s      # ocf:heartbeat:Filesystem resource stop operation interval

beegfs_ha_resource_ipaddr_monitor_interval: 17s      # ocf:eseries:beegfs-ipaddr2 resource monitor operation interval
beegfs_ha_resource_mailto_monitor_interval: 60s      # ocf:heartbeat:mailTo resource monitor operation interval
beegfs_ha_resource_systemd_monitor_interval: 13s     # ocf:heartbeat:systemd resource monitor operation interval

# Performance tuning defaults
beegfs_ha_enable_performance_tuning: false
beegfs_ha_eseries_nvme_attributes:
  queue/scheduler: none
  queue/read_ahead_kb: 4096
  queue/max_sectors_kb: 1024
  queue/nomerges: 2
  queue/rq_affinity: 1
beegfs_ha_eseries_ssd_attributes:
  queue/scheduler: noop
  queue/nr_requests: 64
  queue/read_ahead_kb: 4096
  queue/max_sectors_kb: 1024
  queue/nomerges: 2
  queue/rq_affinity: 1
beegfs_ha_eseries_hdd_attributes:
  queue/scheduler: deadline
  queue/nr_requests: 1024
  queue/read_ahead_kb: 4096
  queue/max_sectors_kb: 1024
  queue/nomerges: 2
  queue/rq_affinity: 1
beegfs_ha_eseries_hdd_queue_attributes:
  scheduler: mq-deadline
  nr_requests: 64
  read_ahead_kb: 4096
  max_sectors_kb: 1024
  nomerges: 2
  rq_affinity: 1

beegfs_ha_sysfs_devpath_device_attributes:  # Set any path attributes relative to sysfs /sys directory.
  kernel/mm/transparent_hugepage:
    defrag: always

# Performance sysctl options
beegfs_ha_performance_sysctl_entries:
  vm.dirty_background_ratio: 1
  vm.dirty_ratio: 75
  vm.vfs_cache_pressure: 50
  vm.min_free_kbytes: 262144
  vm.zone_reclaim_mode: 1
  vm.watermark_scale_factor: 1000

# Required sysctl options
beegfs_ha_required_sysctl_entries:
  net.ipv4.conf.all.rp_filter: 1
  net.ipv4.conf.all.arp_filter: 1
  net.ipv4.conf.all.arp_announce: 2
  net.ipv4.conf.all.arp_ignore: 2

# BeeGFS management service configuration
beegfs_ha_beegfs_mgmtd_conf_path: /etc/beegfs/beegfs-mgmtd.conf   # Default BeeGFS management service configuration file path.
beegfs_ha_beegfs_mgmtd_conf_resource_group_options: {}            # Ansible resource group specific options. For BeeGFS management resource specific configuration.
beegfs_ha_beegfs_mgmtd_conf_ha_group_options: {}                  # Ansible cluster group specific options. For all common or expected management configuration defaults.
beegfs_ha_beegfs_mgmtd_conf_default_options:                      # Default management configuration options.
  storeAllowFirstRunInit: "false" # The quotes prevent the value from being treated like a boolean which converts to True/False.
  connMgmtdPortTCP: 8008
  connMgmtdPortUDP: 8008

# BeeGFS metadata service configuration
beegfs_ha_beegfs_meta_conf_path: /etc/beegfs/beegfs-meta.conf   # Default BeeGFS metadata service configuration file path.
beegfs_ha_beegfs_meta_conf_resource_group_options: {}           # Ansible resource group specific options. For BeeGFS metadata resource specific configuration.
beegfs_ha_beegfs_meta_conf_ha_group_options: {}                 # Ansible cluster group specific options. For all common or expected metadata configuration defaults.
beegfs_ha_beegfs_meta_conf_default_options:                     # Default metadata configuration options.
  storeAllowFirstRunInit: "false"
  tuneTargetChooser: randomized
  connMaxInternodeNum: 128
  connMetaPortTCP: 8005
  connMetaPortUDP: 8005
  connMgmtdPortTCP: 8008
  connMgmtdPortUDP: 8008
  tuneNumWorkers: 32
  connUseRDMA: "true"

# BeeGFS storage service configuration
beegfs_ha_beegfs_storage_conf_path: /etc/beegfs/beegfs-storage.conf   # Default BeeGFS storage service configuration file path.
beegfs_ha_beegfs_storage_conf_resource_group_options: {}              # Ansible resource group specific options. For BeeGFS storage resource specific configuration.
beegfs_ha_beegfs_storage_conf_ha_group_options: {}                    # Ansible cluster group specific options. For all common or expected storage configuration defaults.
beegfs_ha_beegfs_storage_conf_default_options:                        # Default storage configuration options.
  storeAllowFirstRunInit: "false"
  connMaxInternodeNum: 128
  connMgmtdPortTCP: 8008
  connMgmtdPortUDP: 8008
  connStoragePortTCP: 8003
  connStoragePortUDP: 8003
  tuneNumStreamListeners: 2
  tuneNumWorkers: 14
  tuneUseAggressiveStreamPoll: "true"
  tuneFileReadSize: 2048k
  tuneFileWriteSize: 2048k
  connUseRDMA: "true"

# Journald logging defaults
beegfs_ha_journald_allow_changes: true                    # Allows changes to be made to journald configuration changes.
beegfs_ha_journald_options:                               # Default journald configuration options. These key-value pairs will be applied to the journal.conf file.
  Storage: persistent
  Compress: "true"
  SystemMaxUse: 50G
  SystemKeepFree: 10G
  SystemMaxFileSize: 256M
  SystemMaxFiles: 2000

# NTP configuration defaults
beegfs_ha_ntp_configuration_file: /etc/ntp.conf
beegfs_ha_chrony_configuration_file: /etc/chrony.conf
beegfs_ha_chrony_driftfile_file: /var/lib/chrony/drift
beegfs_ha_chrony_keyfile_file: /etc/chrony.keys
beegfs_ha_ntp_server_pools:
  - "pool pool.ntp.org iburst"
beegfs_ha_ntp_restricts:
  - 127.0.0.1
  - ::1

# Pacemaker defaults
beegfs_ha_pacemaker_path: /etc/pacemaker/
beegfs_ha_pacemaker_authkey_path: /etc/pacemaker/authkey
beegfs_ha_pacemaker_config_path: /etc/sysconfig/pacemaker
beegfs_ha_pacemaker_cib_path: /var/lib/pacemaker/cib/
beegfs_ha_pacemaker_ipc_buffer_bytes: 131072

# Corosync defaults
beegfs_ha_corosync_authkey_path: /etc/corosync/authkey
beegfs_ha_corosync_conf_path: /etc/corosync/corosync.conf
beegfs_ha_corosync_log_path: /var/log/corosync.log


# Pcs defaults
beegfs_ha_pcsd_path: /var/lib/pcsd/

# Uninstall defaults
beegfs_ha_uninstall: false                                          # Whether to uninstall the entire BeeGFS HA solution excluding the storage provisioning and host storage setup.
beegfs_ha_uninstall_unmap_volumes: false                            # Whether to unmap the volumes from the host only. This will not effect the data.
beegfs_ha_uninstall_wipe_format_volumes: false                      # Whether to wipe format signatures from volumes on the host. **WARNING! This action is unrecoverable.**
beegfs_ha_uninstall_delete_volumes: false                           # Whether to delete the volumes from the storage. **WARNING! This action is unrecoverable.**
beegfs_ha_uninstall_delete_storage_pools_and_host_mappings: false   # Whether to delete all storage pools/volume groups and host/host group mappings created for BeeGFS HA solution.
                                                                    #   Be aware that removing storage pools/volume groups and host/host group mappings will effect any volumes or
                                                                    #   host mappings dependent on them.  **WARNING! This action is unrecoverable.**
beegfs_ha_uninstall_storage_setup: false                            # Whether to remove configuration that allows storage to be accessible to the BeeGFS HA node
beegfs_ha_uninstall_reboot: false                                   # Whether to reboot after uninstallation.



# Package version defaults
beegfs_ha_beegfs_version:                    # beegfs-* 7.2 (Control BeeGFS versioning with the installed repository)
beegfs_ha_corosync_version:                  # Tested with corosync 3.1.5
beegfs_ha_pacemaker_version:                 # Tested with pacemaker 2.1.0
beegfs_ha_pcs_version:                       # Tested with pcs 0.10.8
beegfs_ha_pacemaker_remote_version:          # Tested with pacemaker_remote 2.1.0
beegfs_ha_resource_agent_version:            # Tested with 4.1.1
beegfs_ha_fence_agents_all_version:          # Tested with 4.2.1
beegfs_ha_force_beegfs_patch_upgrade: false  # Major and master versions must not change; however the patch versions can and this flag will ensure that its the latest version.

# Volume formatting and mounting defaults
beegfs_ha_service_volume_configuration:
  management:
    format_type: ext4
    format_options: "-i 2048 -I 512 -J size=400 -Odir_index,filetype"
    mount_options: "sync,noatime,nodiratime,nobarrier"
    mount_dir: /mnt/
  metadata:
    format_type: ext4
    format_options: "-i 2048 -I 512 -J size=400 -Odir_index,filetype"
    mount_options: "sync,noatime,nodiratime,nobarrier"
    mount_dir: /mnt/
  storage:
    format_type: xfs
    format_options: "-d su=VOLUME_SEGMENT_SIZE_KBk,sw=VOLUME_STRIPE_COUNT -l version=2,su=VOLUME_SEGMENT_SIZE_KBk"
    mount_options: "sync,noatime,nodiratime,logbufs=8,logbsize=256k,largeio,inode64,swalloc,allocsize=131072k"  # Note that nobarrier does not work on newer versions of XFS (ie. RHEL8)
    mount_dir: /mnt/

# Debian / Ubuntu repository defaults
beegfs_ha_debian_repository_base_url: https://www.beegfs.io/release/beegfs_7.2.5
beegfs_ha_debian_repository_gpgkey: https://www.beegfs.io/release/beegfs_7.2.5/gpg/DEB-GPG-KEY-beegfs


# RedHat / CentOS repository defaults
beegfs_ha_rhel_repository_base_url: https://www.beegfs.io/release/beegfs_7.2.5/dists/rhel8
beegfs_ha_rhel_repository_gpgkey: https://www.beegfs.io/release/beegfs_7.2.5/gpg/RPM-GPG-KEY-beegfs


# SUSE repository defaults
beegfs_ha_suse_allow_unsupported_module: true
beegfs_ha_suse_repository_base_url: https://www.beegfs.io/release/beegfs_7.2.5/dists/sles15
beegfs_ha_suse_repository_gpgkey: https://www.beegfs.io/release/beegfs_7.2.5/gpg/RPM-GPG-KEY-beegfs


# Patterns for top-level variables collected from cluster group inventory to be added to each resource inventory.
#   The resource inventories are generated at the beginning of the role's execution. High-availability requires
#   resources to be available on multiple hosts these patterns help select what information is used.
beegfs_ha_top_level_variable_exclusion_pattern: "^ansible.*"
beegfs_ha_top_level_variable_inclusion_pattern: "^(beegfs|eseries).*"

# netapp_eseries.host collection defaults.
eseries_common_force_skip_uninstall: True
